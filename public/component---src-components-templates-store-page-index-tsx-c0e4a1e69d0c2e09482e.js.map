{"version":3,"file":"component---src-components-templates-store-page-index-tsx-c0e4a1e69d0c2e09482e.js","mappings":"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","sources":["webpack://gatsby-zzenz-starter/./src/components/hero/index.tsx","webpack://gatsby-zzenz-starter/./src/components/seo/twitter.tsx","webpack://gatsby-zzenz-starter/./src/components/seo/facebook.tsx","webpack://gatsby-zzenz-starter/./src/components/seo/external-scripts..tsx","webpack://gatsby-zzenz-starter/./src/components/seo/index.tsx","webpack://gatsby-zzenz-starter/./src/components/templates/store-page/index.tsx","webpack://gatsby-zzenz-starter/./src/helpers/images/index.ts"],"sourcesContent":["import React from \"react\"\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport { getExtension, getImageLink } from \"../../helpers/images\";\nimport HeroPropsTypes from \"./types\";\n\nimport \"./style.css\";\n\nexport default function Hero({ src, alt }: HeroPropsTypes) {\n  const HeroImage = {\n    backgroundColor: \"#f4f5f9\",\n    layout: \"constrained\",\n    images: {\n      sources: [\n        {\n          media: \"\",\n          type: \"image/webp\",\n          srcSet: getImageLink(src),\n        },\n        {\n          media: \"\",\n          type: `image/${getExtension(src)}`,\n          srcSet: src,\n        },\n      ]\n    }\n  };\n\n  return (\n    <section className=\"hero pb-3 position-relative bg-cover bg-center d-flex align-items-center\">\n      <GatsbyImage\n        image={HeroImage as IGatsbyImageData}\n        alt={alt}\n        className={\"hero__image-bg\"}\n      />\n    </section>\n  )\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { TwitterCardsPropsTypes } from \"./types\";\n\nfunction TwitterCards({ type, username, title, description, image }: TwitterCardsPropsTypes) {\n  type = type ?? \"summary_large_image\";\n\n  return (\n    <Helmet>\n      {username && <meta name=\"twitter:creator\" content={username} />}\n      <meta name=\"twitter:card\" content={type} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      {image && <meta name=\"twitter:image\" content={image} />}\n      {image && <meta name=\"twitter:image:alt\" content={description} />}\n    </Helmet>\n  )\n}\n\nexport default TwitterCards;","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { FacebookOpenGraphPropTypes } from \"./types\";\n\nfunction FacebookOpenGraph({ url, name, type, title, descriprion, image, locale }: FacebookOpenGraphPropTypes) {\n  type = type ?? \"website\";\n\n  return (\n    <Helmet>\n      {name && <meta property=\"og:site_name\" content={name} />}\n      <meta property=\"og:locale\" content={locale} />\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:type\" content={type} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={descriprion} />\n      {!!image && <meta property=\"og:image\" content={image} />}\n      {!!image && <meta property=\"og:image:alt\" content={descriprion} />}\n    </Helmet>\n  );\n}\n\nexport default FacebookOpenGraph;","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\n\ninterface ExternalScriptsPropsTypes {\n  gaMeasurementId?: string | undefined | null;\n  facebookPixelId?: string | undefined | null;\n}\nexport default function ExternalScripts({ gaMeasurementId, facebookPixelId }: ExternalScriptsPropsTypes) {\n  if (!!gaMeasurementId || !!facebookPixelId) {\n    return (\n      <Helmet>\n        {\n          !!gaMeasurementId && (\n            <script async src={`https://www.googletagmanager.com/gtag/js?id=${gaMeasurementId}`}></script>\n          )}\n        {\n          !!gaMeasurementId && (\n            <script>\n              {`\n                window.dataLayer = window.dataLayer || [];\n                function gtag(){dataLayer.push(arguments);}\n                gtag('js', new Date());\n\n                gtag('config', '${gaMeasurementId}');\n              `}\n            </script>\n          )\n        }\n        {\n          !!facebookPixelId && (\n            <script>{`\n              !function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?\n              n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;\n              n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;\n              t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,\n              document,'script','https://connect.facebook.net/en_US/fbevents.js');\n              fbq('init', '${facebookPixelId}'); // Insert your pixel ID here.\n              fbq('track', 'PageView');\n            `}</script>\n          )\n        }\n      </Helmet>\n    );\n  }\n  return null;\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Twitter from \"./twitter\";\nimport Facebook from \"./facebook\";\nimport { SEOPropTypes } from \"./types\";\nimport { getImage } from \"gatsby-plugin-image\";\nimport ExternalScripts from \"./external-scripts.\";\n\n// Complete tutorial: https://www.gatsbyjs.org/docs/add-seo-component/\nconst SEO = ({ title, description, banner, pathname, article, node, product }: SEOPropTypes) => {\n  const {\n    site,\n    storeSocialMedia: {\n      localFile,\n      store_primary_settings: {\n        store_analytics: {\n          google_analytics: gaMeasurementId,\n          facebook_pixel: facebookPixelId\n        },\n        store_ui: {\n          store_logo\n        }\n      }\n    }\n  } = useStaticQuery(query);\n  const {\n    buildTime,\n    siteMetadata: {\n      siteUrl=\"https://zzenz.zzenz.store\",\n      defaultTitle,\n      defaultDescription,\n      defaultBanner,\n      headline,\n      siteLanguage,\n      ogLanguage,\n      author,\n    },\n  } = site\n  title = title ?? null;\n  description = description || \"\";\n  banner = banner ?? null;\n  pathname = pathname ?? null;\n  article = article ?? false;\n  node = node ?? null;\n\n  const seo = {\n    title: title || defaultTitle || site.author,\n    description: description || defaultDescription || \"\",\n    image: `${banner || \"\"}`,\n    url: `${siteUrl}${pathname || \"\"}`,\n    name: author\n  };\n\n  // schema.org in JSONLD format\n  // https://developers.google.com/search/docs/guides/intro-structured-data\n  // You can fill out the \"author\", \"creator\" with more data or another type (e.g. \"Organization\")\n  const copyrightYear = (new Date()).getFullYear();\n  const schemaOrgWebPage = {\n    \"@context\": \"http://schema.org\",\n    \"@type\": \"WebPage\",\n    url: siteUrl,\n    headline,\n    inLanguage: siteLanguage,\n    mainEntityOfPage: siteUrl,\n    description: seo.description,\n    name: defaultTitle,\n    author: {\n      \"@type\": \"Person\",\n      name: author,\n    },\n    copyrightHolder: {\n      \"@type\": \"Person\",\n      name: author,\n    },\n    copyrightYear: copyrightYear,\n    creator: {\n      \"@type\": \"Person\",\n      name: author,\n    },\n    publisher: {\n      \"@type\": \"Organization\",\n      name: author,\n    },\n    datePublished: buildTime,\n    dateModified: buildTime,\n    image: {\n      \"@type\": \"ImageObject\",\n      url: `${siteUrl}${defaultBanner}`,\n    },\n  };\n\n  // Initial breadcrumb list\n  const itemListElement = [\n    {\n      \"@type\": \"ListItem\",\n      item: {\n        \"@id\": siteUrl,\n        name: product?.name || \"Homepage\",\n      },\n      position: 1,\n    },\n  ];\n\n  let schemaArticle = null\n\n  if (article) {\n    schemaArticle = {\n      \"@context\": \"http://schema.org\",\n      \"@type\": \"Article\",\n      author: {\n        \"@type\": \"Person\",\n        name: author,\n      },\n      copyrightHolder: {\n        \"@type\": \"Person\",\n        name: author,\n      },\n      copyrightYear: copyrightYear,\n      creator: {\n        \"@type\": \"Person\",\n        name: author,\n      },\n      publisher: {\n        \"@type\": \"Organization\",\n        name: author,\n        logo: {\n          \"@type\": \"ImageObject\",\n          url: `${siteUrl}${defaultBanner}`,\n        },\n      },\n      datePublished: node.first_publication_date,\n      dateModified: node.last_publication_date,\n      description: seo.description,\n      headline: seo.title,\n      inLanguage: siteLanguage,\n      url: seo.url,\n      name: seo.title,\n      image: {\n        \"@type\": \"ImageObject\",\n        url: seo.image,\n      },\n      mainEntityOfPage: seo.url,\n    }\n    // Push current blogpost into breadcrumb list\n    itemListElement.push({\n      \"@type\": \"ListItem\",\n      item: {\n        \"@id\": seo.url,\n        name: seo.title,\n      },\n      position: 2,\n    });\n  }\n\n  let schemaProduct = null\n  if (product) {\n    schemaProduct = {\n      \"@context\": \"https://schema.org/\",\n      \"@type\": \"Product\",\n      \"name\": seo.title,\n      \"image\": product?.images?.filter(img => img !== null)?.map(image => image.src) || [],\n      \"description\": seo.description,\n      \"sku\": product?.sku,\n      \"brand\": {\n        \"@type\": \"Brand\",\n        \"name\": \"\"\n      },\n      \"aggregateRating\": {\n        \"@type\": \"AggregateRating\",\n        \"ratingValue\": \"5\",\n        \"reviewCount\": \"1\"\n      },\n      \"offers\": {\n        \"@type\": \"Offer\",\n        \"url\": seo.url,\n        \"priceCurrency\": \"DZD\",\n        \"price\": product.regular_price,\n        \"priceValidUntil\": (new Date(Date.now() + 3600000 * 24 * 30)).toLocaleString(),\n        \"itemCondition\": \"https://schema.org/NewCondition\",\n        \"availability\": `https://schema.org/${product.stock_status}`\n      }\n    };\n    // Push current blogpost into breadcrumb list\n    itemListElement.push({\n      \"@type\": \"ListItem\",\n      item: {\n        \"@id\": seo.url,\n        name: seo.title,\n      },\n      position: !!article ? 3 : 2,\n    })\n  }\n\n  // add favicon\n  let faviconUrl = null;\n  if (!!localFile) {\n    faviconUrl = getImage(localFile)?.images?.fallback?.src;\n    faviconUrl = faviconUrl ?? store_logo;\n  }\n\n  const breadcrumb = {\n    \"@context\": \"http://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    description: \"Breadcrumbs list\",\n    name: \"Breadcrumbs\",\n    itemListElement,\n  };\n\n  return (\n    <>\n      <Helmet title={seo.title}>\n        <html lang={siteLanguage} />\n        {!!faviconUrl && <link rel={\"icon\"} type={\"image/png\"} href={faviconUrl} />}\n        <link rel=\"canonical\" href={seo.url} />\n        <meta name=\"description\" content={seo.description} />\n        <meta name=\"image\" content={seo.image} />\n        <meta name=\"gatsby-starter\" content=\"Gatsby Starter Prismic\" />\n        {/* Insert schema.org data conditionally (webpage/article) + everytime (breadcrumbs) */}\n        {!article && <script type=\"application/ld+json\">{JSON.stringify(schemaOrgWebPage)}</script>}\n        {article && <script type=\"application/ld+json\">{JSON.stringify(schemaArticle)}</script>}\n        {product && <script type=\"application/ld+json\">{JSON.stringify(schemaProduct)}</script>}\n        <script type=\"application/ld+json\">{JSON.stringify(breadcrumb)}</script>\n      </Helmet>\n      <Facebook\n        descriprion={seo.description}\n        image={seo.image}\n        title={seo.title}\n        type={article ? \"article\" : \"website\"}\n        url={seo.url}\n        locale={ogLanguage}\n        name={seo.name}\n      />\n      <Twitter\n        title={seo.title}\n        image={seo.image}\n        description={seo.description}\n        username={seo.name}\n      />\n      <ExternalScripts\n        gaMeasurementId={gaMeasurementId}\n        facebookPixelId={facebookPixelId}\n      />\n    </>\n  )\n}\n\nexport default SEO;\n\nconst query = graphql`\n  query SEO {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD\")\n      siteMetadata {\n        defaultTitle: title\n        defaultDescription: description\n        defaultBanner: banner\n        headline\n        siteLanguage\n        ogLanguage\n        author\n        twitter\n        facebook\n      }\n    }\n    storeSocialMedia: zzStoreWebsiteDetails {\n      store_primary_settings {\n        store_ui {\n          store_logo\n        }\n        store_analytics {\n          google_analytics,\n          facebook_pixel\n        },\n      }\n      localFile {\n        childImageSharp {\n          gatsbyImageData(\n            height: 32\n            width: 32\n            formats: [PNG]\n          )\n        }\n      }\n    }\n  }\n`","import { graphql, Link, PageProps } from \"gatsby\";\nimport React from \"react\"\nimport { NoneHomeStorePageDataType } from \"../../../types/pages\";\nimport Hero from \"../../hero\";\nimport Layout from \"../../layout\";\nimport SEO from \"../../seo\";\n\nimport \"./ql-text-editor-style.css\";\n\nexport default function StorePage({ data: { pageData } }: PageProps<NoneHomeStorePageDataType>) {\n  const productDates = {\n    first_publication_date: pageData?.date || (new Date()).toISOString(),\n    last_publication_date: pageData?.modified || (new Date()).toISOString(),\n  };\n\n  return (\n    <Layout>\n      <SEO\n        title={pageData?.title || \"\"}\n        description={(pageData.content || \"\")?.substring(0, 50)}\n        banner={pageData?.featured_media || \"\"}\n        pathname={`/${pageData?.slug || \"\"}/`}\n        node={productDates}\n      />\n\n      <div className=\"container\">\n\n        {\n          !!pageData?.featured_media\n            ? (\n              <Hero\n                src={pageData?.featured_media || \"\"}\n                alt={pageData?.title || \"\"}\n              />\n            )\n            : (\n              <section className=\"py-5 bg-light\">\n                <div className=\"container\">\n                  <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n                    <div className=\"col-lg-6\">\n                      <h1 className=\"h2 text-uppercase mb-0\">\n                        {pageData?.title}\n                      </h1>\n                    </div>\n                    <div className=\"col-lg-6 text-lg-end\">\n                      <nav aria-label=\"breadcrumb\">\n                        <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0 bg-light\">\n                          <li className=\"breadcrumb-item\">\n                            <Link\n                              to={\"/\"}\n                              className=\"text-dark\"\n                            >\n                              Home\n                            </Link>\n                          </li>\n                          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                            {pageData?.title}\n                          </li>\n                        </ol>\n                      </nav>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            )\n        }\n\n        <div\n          dangerouslySetInnerHTML={{ __html: pageData.content || \"\" }}\n          className={\"custom__page py-5\"}\n        />\n\n      </div>\n\n    </Layout>\n  )\n}\n\n\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    pageData: zzPage(\n      id: {eq: $id}\n    ) {\n      id\n      title\n      type\n      date\n      modified\n      content\n      featured_media\n    }\n  }\n`;","/**\n * Construct image url using external image processing provider\n * @param src image source(main url)\n * @returns new image url using image processing CDN \n * to generate image with different size and format\n */\ntype ImageFormat = \"webp\" | \"png\" | \"jpg\";\ntype GetImageLinkConfigTypes = {\n  formats: ImageFormat;\n};\nexport function getImageLink(src: string, imageConfig?: GetImageLinkConfigTypes): string {\n  const format = imageConfig?.formats ?? \"webp\"\n  return (\n    process.env.NODE_ENV == \"production\"\n      ? `https://images.weserv.nl/?url=${src}&output=${format}&q=85`\n      : src\n  );\n}\n\n/**\n * Retrive file extension\n * \n * @param name file name or url\n * @returns extension of the file\n */\nexport function getExtension(name: string) {\n  const lastIndex = name.lastIndexOf(\".\");\n  const extension = name.substring(lastIndex + 1);\n\n  return extension;\n}"],"names":["Hero","src","alt","HeroImage","backgroundColor","layout","images","sources","media","type","srcSet","getImageLink","getExtension","React","className","GatsbyImage","image","username","title","description","Helmet","name","content","url","descriprion","locale","property","ExternalScripts","gaMeasurementId","facebookPixelId","async","banner","pathname","article","node","product","useStaticQuery","query","site","storeSocialMedia","localFile","store_primary_settings","store_analytics","google_analytics","facebook_pixel","store_logo","store_ui","buildTime","siteMetadata","siteUrl","defaultTitle","defaultDescription","defaultBanner","headline","siteLanguage","ogLanguage","author","seo","copyrightYear","Date","getFullYear","schemaOrgWebPage","inLanguage","mainEntityOfPage","copyrightHolder","creator","publisher","datePublished","dateModified","itemListElement","item","position","schemaArticle","logo","first_publication_date","last_publication_date","push","schemaProduct","filter","img","map","sku","regular_price","now","toLocaleString","stock_status","faviconUrl","getImage","_getImage","_getImage$images","fallback","_getImage$images$fall","breadcrumb","lang","rel","href","JSON","stringify","Facebook","Twitter","StorePage","pageData","data","productDates","date","toISOString","modified","Layout","SEO","_ref2","substring","featured_media","slug","Link","to","dangerouslySetInnerHTML","__html","imageConfig","process","formats","lastIndex","lastIndexOf"],"sourceRoot":""}